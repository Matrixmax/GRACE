 // Start of abstract AST nodes
/**
 * @filename: BaseNode
 * @brief: BaseNode provides classes and predicates for working with SQL AST nodes.
 * This file is auto-generated by SQL extractor's jinja template. Do not modify. See ../extractor/README.md
 * in the source code repository for how to generate this file.
 */
schema SQLExprImpl extends SQLObject {
    
}
impl SQLExprImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLExprImpl {
        for (tmp in SQLObject(db)) {
            for (x in SqlExprImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExprImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLPartitionBy extends SQLObject {
    
}
impl SQLPartitionBy {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLPartitionBy {
        for (tmp in SQLObject(db)) {
            for (x in SqlPartitionByDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLPartitionBy {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the is linear of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.isLinear:boolean()`.
     * @return int
     */
    pub fn isLinear(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlPartitionByDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getIsLinear()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the lifecycle oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.getLifecycle:SQLIntegerExpr()`.
     * @return SQLIntegerExpr
     */
    pub fn getLifecycle(self) -> SQLIntegerExpr {
        for (s in SQLIntegerExpr(__all_data__),
            x in SqlPartitionByDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getLifecycleOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the partitions count oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.getPartitionsCount:SQLExpr()`.
     * @return SQLExpr
     */
    pub fn getPartitionsCount(self) -> SQLExpr {
        for (s in SQLExpr(__all_data__),
            x in SqlPartitionByDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getPartitionsCountOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the sub partition by oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.getSubPartitionBy:SQLSubPartitionBy()`.
     * @return SQLSubPartitionBy
     */
    pub fn getSubPartitionBy(self) -> SQLSubPartitionBy {
        for (s in SQLSubPartitionBy(__all_data__),
            x in SqlPartitionByDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getSubPartitionByOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the columns of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.getColumns:List<SQLExpr>()`.
     * @return SQLExpr
     */
    pub fn getColumns(self) -> *SQLExpr {
        for (x in SQLExpr(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
    /**
     * @brief gets the partitions of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.getPartitions:List<SQLPartition>()`.
     * @return SQLPartition
     */
    pub fn getPartitions(self) -> *SQLPartition {
        for (x in SQLPartition(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
    /**
     * @brief gets the store in of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLPartitionBy.getStoreIn:List<SQLName>()`.
     * @return SQLName
     */
    pub fn getStoreIn(self) -> *SQLName {
        for (x in SQLName(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema SQLStatementImpl extends SQLObject {
    
}
impl SQLStatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLStatementImpl {
        for (tmp in SQLObject(db)) {
            for (x in SqlStatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the is after semi of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLStatementImpl.isAfterSemi:boolean()`.
     * @return int
     */
    pub fn isAfterSemi(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlStatementImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getIsAfterSemi()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the head hints direct of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLStatementImpl.getHeadHintsDirect:List<SQLCommentHint>()`.
     * @return SQLCommentHint
     */
    pub fn getHeadHintsDirect(self) -> *SQLCommentHint {
        for (x in SQLCommentHint(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema SQLSubPartitionBy extends SQLObject {
    
}
impl SQLSubPartitionBy {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLSubPartitionBy {
        for (tmp in SQLObject(db)) {
            for (x in SqlSubPartitionByDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLSubPartitionBy {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the is linear of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLSubPartitionBy.isLinear:boolean()`.
     * @return int
     */
    pub fn isLinear(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlSubPartitionByDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getIsLinear()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the lifecycle oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLSubPartitionBy.getLifecycle:SQLIntegerExpr()`.
     * @return SQLIntegerExpr
     */
    pub fn getLifecycle(self) -> SQLIntegerExpr {
        for (s in SQLIntegerExpr(__all_data__),
            x in SqlSubPartitionByDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getLifecycleOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the sub partitions count oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLSubPartitionBy.getSubPartitionsCount:SQLExpr()`.
     * @return SQLExpr
     */
    pub fn getSubPartitionsCount(self) -> SQLExpr {
        for (s in SQLExpr(__all_data__),
            x in SqlSubPartitionByDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getSubPartitionsCountOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the options of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLSubPartitionBy.getOptions:List<SQLAssignItem>()`.
     * @return SQLAssignItem
     */
    pub fn getOptions(self) -> *SQLAssignItem {
        for (x in SQLAssignItem(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
    /**
     * @brief gets the sub partition template of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.SQLSubPartitionBy.getSubPartitionTemplate:List<SQLSubPartition>()`.
     * @return SQLSubPartition
     */
    pub fn getSubPartitionTemplate(self) -> *SQLSubPartition {
        for (x in SQLSubPartition(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema SQLNumericLiteralExpr extends SQLExprImpl {
    
}
impl SQLNumericLiteralExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLNumericLiteralExpr {
        for (tmp in SQLExprImpl(db)) {
            for (x in SqlNumericLiteralExprDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLNumericLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLTextLiteralExpr extends SQLExprImpl {
    
}
impl SQLTextLiteralExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLTextLiteralExpr {
        for (tmp in SQLExprImpl(db)) {
            for (x in SqlTextLiteralExprDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTextLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the text of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.expr.SQLTextLiteralExpr.getText:String()`.
     * @return string
     */
    pub fn getText(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlTextLiteralExprDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getText()) {
                        return s
                    }
                }
            }
        }
    }
}
schema SQLConstraintImpl extends SQLObject {
    
}
impl SQLConstraintImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLConstraintImpl {
        for (tmp in SQLObject(db)) {
            for (x in SqlConstraintImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLConstraintImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the comment oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLConstraintImpl.getComment:SQLExpr()`.
     * @return SQLExpr
     */
    pub fn getComment(self) -> SQLExpr {
        for (s in SQLExpr(__all_data__),
            x in SqlConstraintImplDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getCommentOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the enable of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLConstraintImpl.getEnable:Boolean()`.
     * @return int
     */
    pub fn getEnable(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlConstraintImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getEnable()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the name oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLConstraintImpl.getName:SQLName()`.
     * @return SQLName
     */
    pub fn getName(self) -> SQLName {
        for (s in SQLName(__all_data__),
            x in SqlConstraintImplDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getNameOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the rely of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLConstraintImpl.getRely:Boolean()`.
     * @return int
     */
    pub fn getRely(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlConstraintImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getRely()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the validate of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLConstraintImpl.getValidate:Boolean()`.
     * @return int
     */
    pub fn getValidate(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlConstraintImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getValidate()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the hints of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLConstraintImpl.getHints:List<SQLCommentHint>()`.
     * @return SQLCommentHint
     */
    pub fn getHints(self) -> *SQLCommentHint {
        for (x in SQLCommentHint(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema SQLInsertInto extends SQLStatementImpl {
    
}
impl SQLInsertInto {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLInsertInto {
        for (tmp in SQLStatementImpl(db)) {
            for (x in SqlInsertIntoDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLInsertInto {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the alias of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getAlias:String()`.
     * @return string
     */
    pub fn getAlias(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getAlias()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the columns string of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getColumnsString:String()`.
     * @return string
     */
    pub fn getColumnsString(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getColumnsString()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the columns string hash of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getColumnsStringHash:long()`.
     * @return string
     */
    pub fn getColumnsStringHash(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getColumnsStringHash()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the hint oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getHint:SQLCommentHint()`.
     * @return SQLCommentHint
     */
    pub fn getHint(self) -> SQLCommentHint {
        for (s in SQLCommentHint(__all_data__),
            x in SqlInsertIntoDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getHintOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the insert before comments direct of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getInsertBeforeCommentsDirect:List<String>()`.
     * @return string
     */
    pub fn getInsertBeforeCommentsDirect(self) -> *string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getInsertBeforeCommentsDirect()) {
                        yield s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the is overwrite of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.isOverwrite:boolean()`.
     * @return int
     */
    pub fn isOverwrite(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getIsOverwrite()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the query oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getQuery:SQLSelect()`.
     * @return SQLSelect
     */
    pub fn getQuery(self) -> SQLSelect {
        for (s in SQLSelect(__all_data__),
            x in SqlInsertIntoDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getQueryOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the table name oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getTableName:SQLName()`.
     * @return SQLName
     */
    pub fn getTableName(self) -> SQLName {
        for (s in SQLName(__all_data__),
            x in SqlInsertIntoDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getTableNameOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the table source oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getTableSource:SQLExprTableSource()`.
     * @return SQLExprTableSource
     */
    pub fn getTableSource(self) -> SQLExprTableSource {
        for (s in SQLExprTableSource(__all_data__),
            x in SqlInsertIntoDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getTableSourceOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the values of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getValues:ValuesClause()`.
     * @return string
     */
    pub fn getValues(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getValues()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the values list of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getValuesList:List<ValuesClause>()`.
     * @return string
     */
    pub fn getValuesList(self) -> *string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlInsertIntoDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getValuesList()) {
                        yield s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the columns of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getColumns:List<SQLExpr>()`.
     * @return SQLExpr
     */
    pub fn getColumns(self) -> *SQLExpr {
        for (x in SQLExpr(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
    /**
     * @brief gets the partitions of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLInsertInto.getPartitions:List<SQLAssignItem>()`.
     * @return SQLAssignItem
     */
    pub fn getPartitions(self) -> *SQLAssignItem {
        for (x in SQLAssignItem(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema SQLPrivilegeStatement extends SQLStatementImpl {
    
}
impl SQLPrivilegeStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLPrivilegeStatement {
        for (tmp in SQLStatementImpl(db)) {
            for (x in SqlPrivilegeStatementDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLPrivilegeStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the resource of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLPrivilegeStatement.getResource:SQLObject()`.
     * @return string
     */
    pub fn getResource(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlPrivilegeStatementDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getResource()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the resource type of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLPrivilegeStatement.getResourceType:SQLObjectType()`.
     * @return string
     */
    pub fn getResourceType(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlPrivilegeStatementDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getResourceType()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the privileges of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLPrivilegeStatement.getPrivileges:List<SQLPrivilegeItem>()`.
     * @return SQLPrivilegeItem
     */
    pub fn getPrivileges(self) -> *SQLPrivilegeItem {
        for (x in SQLPrivilegeItem(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
    /**
     * @brief gets the users of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLPrivilegeStatement.getUsers:List<SQLExpr>()`.
     * @return SQLExpr
     */
    pub fn getUsers(self) -> *SQLExpr {
        for (x in SQLExpr(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema SQLSelectQueryBase extends SQLObject {
    
}
impl SQLSelectQueryBase {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLSelectQueryBase {
        for (tmp in SQLObject(db)) {
            for (x in SqlSelectQueryBaseDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLSelectQueryBase {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the is parenthesized of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLSelectQueryBase.isParenthesized:boolean()`.
     * @return int
     */
    pub fn isParenthesized(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlSelectQueryBaseDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getIsParenthesized()) {
                        return s
                    }
                }
            }
        }
    }
}
schema SQLTableSourceImpl extends SQLObject {
    
}
impl SQLTableSourceImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLTableSourceImpl {
        for (tmp in SQLObject(db)) {
            for (x in SqlTableSourceImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableSourceImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the alias of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getAlias:String()`.
     * @return string
     */
    pub fn getAlias(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlTableSourceImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getAlias()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the alias2 of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getAlias2:String()`.
     * @return string
     */
    pub fn getAlias2(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in SqlTableSourceImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getAlias2()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the flashback oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getFlashback:SQLExpr()`.
     * @return SQLExpr
     */
    pub fn getFlashback(self) -> SQLExpr {
        for (s in SQLExpr(__all_data__),
            x in SqlTableSourceImplDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getFlashbackOid()) {
                    return s
                }
            }
        }
    }
    /**
     * @brief gets the hints size of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getHintsSize:int()`.
     * @return int
     */
    pub fn getHintsSize(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in SqlTableSourceImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getHintsSize()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the hints of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getHints:List<SQLHint>()`.
     * @return SQLHint
     */
    pub fn getHints(self) -> *SQLHint {
        for (x in SQLHint(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema DB2StatementImpl extends SQLStatementImpl {
    
}
impl DB2StatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *DB2StatementImpl {
        for (tmp in SQLStatementImpl(db)) {
            for (x in Db2StatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield DB2StatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlIndexHintImpl extends MySqlObjectImpl {
    
}
impl MySqlIndexHintImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlIndexHintImpl {
        for (tmp in MySqlObjectImpl(db)) {
            for (x in MySqlIndexHintImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlIndexHintImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the option of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.mysql.ast.MySqlIndexHintImpl.getOption:Option()`.
     * @return string
     */
    pub fn getOption(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in MySqlIndexHintImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getOption()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the index list of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.mysql.ast.MySqlIndexHintImpl.getIndexList:List<SQLName>()`.
     * @return SQLName
     */
    pub fn getIndexList(self) -> *SQLName {
        for (x in SQLName(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema MySqlObjectImpl extends SQLObject {
    
}
impl MySqlObjectImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlObjectImpl {
        for (tmp in SQLObject(db)) {
            for (x in MySqlObjectImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObjectImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlExprImpl extends MySqlObjectImpl {
    
}
impl MySqlExprImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlExprImpl {
        for (tmp in MySqlObjectImpl(db)) {
            for (x in MySqlExprImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlExprImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the hint oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlExprImpl.getHint:SQLCommentHint()`.
     * @return SQLCommentHint
     */
    pub fn getHint(self) -> SQLCommentHint {
        for (s in SQLCommentHint(__all_data__),
            x in MySqlExprImplDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getHintOid()) {
                    return s
                }
            }
        }
    }
}
schema MySqlStatementImpl extends SQLStatementImpl {
    
}
impl MySqlStatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlStatementImpl {
        for (tmp in SQLStatementImpl(db)) {
            for (x in MySqlStatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlStatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OdpsObjectImpl extends SQLObject {
    
}
impl OdpsObjectImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OdpsObjectImpl {
        for (tmp in SQLObject(db)) {
            for (x in OdpsObjectImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsObjectImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OdpsStatementImpl extends SQLStatementImpl {
    
}
impl OdpsStatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OdpsStatementImpl {
        for (tmp in SQLStatementImpl(db)) {
            for (x in OdpsStatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsStatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OdpsStatisticClause extends OdpsObjectImpl {
    
}
impl OdpsStatisticClause {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OdpsStatisticClause {
        for (tmp in OdpsObjectImpl(db)) {
            for (x in OdpsStatisticClauseDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsStatisticClause {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleSQLObjectImpl extends SQLObject {
    
}
impl OracleSQLObjectImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSQLObjectImpl {
        for (tmp in SQLObject(db)) {
            for (x in OracleSqlObjectImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObjectImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleSegmentAttributesImpl extends SQLObject {
    
}
impl OracleSegmentAttributesImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSegmentAttributesImpl {
        for (tmp in SQLObject(db)) {
            for (x in OracleSegmentAttributesImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSegmentAttributesImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the compress of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getCompress:Boolean()`.
     * @return int
     */
    pub fn getCompress(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getCompress()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the compress level of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getCompressLevel:Integer()`.
     * @return int
     */
    pub fn getCompressLevel(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getCompressLevel()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the free lists of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getFreeLists:Integer()`.
     * @return int
     */
    pub fn getFreeLists(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getFreeLists()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the initrans of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getInitrans:Integer()`.
     * @return int
     */
    pub fn getInitrans(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getInitrans()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the is compress for oltp of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.isCompressForOltp:boolean()`.
     * @return int
     */
    pub fn isCompressForOltp(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getIsCompressForOltp()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the logging of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getLogging:Boolean()`.
     * @return int
     */
    pub fn getLogging(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getLogging()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the maxtrans of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getMaxtrans:Integer()`.
     * @return int
     */
    pub fn getMaxtrans(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getMaxtrans()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the pctfree of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getPctfree:Integer()`.
     * @return int
     */
    pub fn getPctfree(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getPctfree()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the pctincrease of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getPctincrease:Integer()`.
     * @return int
     */
    pub fn getPctincrease(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getPctincrease()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the pctthreshold of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getPctthreshold:Integer()`.
     * @return int
     */
    pub fn getPctthreshold(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getPctthreshold()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the pctused of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getPctused:Integer()`.
     * @return int
     */
    pub fn getPctused(self) -> int {
        for (s in int::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getPctused()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the storage of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getStorage:SQLObject()`.
     * @return string
     */
    pub fn getStorage(self) -> string {
        for (s in string::__undetermined_all__()) {
            for (x in OracleSegmentAttributesImplDO(__all_data__)) {
                if (self.key_eq(x)) {
                    if (s = x.getStorage()) {
                        return s
                    }
                }
            }
        }
    }
    /**
     * @brief gets the tablespace oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.OracleSegmentAttributesImpl.getTablespace:SQLName()`.
     * @return SQLName
     */
    pub fn getTablespace(self) -> SQLName {
        for (s in SQLName(__all_data__),
            x in OracleSegmentAttributesImplDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getTablespaceOid()) {
                    return s
                }
            }
        }
    }
}
schema OracleAlterTableItem extends OracleSQLObjectImpl {
    
}
impl OracleAlterTableItem {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleAlterTableItem {
        for (tmp in OracleSQLObjectImpl(db)) {
            for (x in OracleAlterTableItemDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleSelectPivotBase extends OracleSQLObjectImpl {
    
}
impl OracleSelectPivotBase {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSelectPivotBase {
        for (tmp in OracleSQLObjectImpl(db)) {
            for (x in OracleSelectPivotBaseDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSelectPivotBase {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the pivot for of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.stmt.OracleSelectPivotBase.getPivotFor:List<SQLExpr>()`.
     * @return SQLExpr
     */
    pub fn getPivotFor(self) -> *SQLExpr {
        for (x in SQLExpr(__all_data__)) {
            if (self.key_eq(x.getParent())) {
                yield x
            }
        }
    }
}
schema OracleSelectRestriction extends OracleSQLObjectImpl {
    
}
impl OracleSelectRestriction {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSelectRestriction {
        for (tmp in OracleSQLObjectImpl(db)) {
            for (x in OracleSelectRestrictionDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSelectRestriction {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
    /**
     * @brief gets the constraint oid of the class. It corresponds to this Druid's method: `com.alibaba.druid.sql.dialect.oracle.ast.stmt.OracleSelectRestriction.getConstraint:SQLName()`.
     * @return SQLName
     */
    pub fn getConstraint(self) -> SQLName {
        for (s in SQLName(__all_data__),
            x in OracleSelectRestrictionDO(__all_data__)) {
            if (self.key_eq(x)) {
                if (s.oid_ = x.getConstraintOid()) {
                    return s
                }
            }
        }
    }
}
schema OracleStatementImpl extends SQLStatementImpl {
    
}
impl OracleStatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleStatementImpl {
        for (tmp in SQLStatementImpl(db)) {
            for (x in OracleStatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OscarObjectImpl extends SQLObject {
    
}
impl OscarObjectImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OscarObjectImpl {
        for (tmp in SQLObject(db)) {
            for (x in OscarObjectImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarObjectImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PhoenixStatementImpl extends SQLStatementImpl {
    
}
impl PhoenixStatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PhoenixStatementImpl {
        for (tmp in SQLStatementImpl(db)) {
            for (x in PhoenixStatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield PhoenixStatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PGSQLObjectImpl extends SQLObject {
    
}
impl PGSQLObjectImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PGSQLObjectImpl {
        for (tmp in SQLObject(db)) {
            for (x in PgsqlObjectImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLObjectImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PGExprImpl extends SQLExprImpl {
    
}
impl PGExprImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PGExprImpl {
        for (tmp in SQLExprImpl(db)) {
            for (x in PgExprImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield PGExprImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLServerObjectImpl extends SQLObject {
    
}
impl SQLServerObjectImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLServerObjectImpl {
        for (tmp in SQLObject(db)) {
            for (x in SqlServerObjectImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerObjectImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLServerStatementImpl extends SQLStatementImpl {
    
}
impl SQLServerStatementImpl {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLServerStatementImpl {
        for (tmp in SQLStatementImpl(db)) {
            for (x in SqlServerStatementImplDO(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatementImpl {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
 // end
 // Start of interfaces which AST node implements
schema SQLColumnConstraint extends SQLObject {
    
}
impl SQLColumnConstraint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLColumnConstraint {
        for (tmp in SQLObject(db)) {
            for (x in SQLColumnCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLColumnConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnPrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLColumnConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnReference(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLColumnConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnUniqueKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLColumnConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNotNullConstraint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLColumnConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNullConstraint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLColumnConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLDropStatement extends SQLObject {
    
}
impl SQLDropStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLDropStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLDropCatalogStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropDatabaseStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropEventStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropFunctionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropLogFileGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropOutlineStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropProcedureStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropResourceGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropResourceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropSequenceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropServerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropSynonymStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTableGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTableSpaceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTriggerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTypeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropUserStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPurgeLogsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPurgeRecyclebinStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPurgeTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPurgeTemporaryOutputStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlDropFullTextStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleDropDbLinkStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarDropSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGDropSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDropStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLReplaceable extends SQLObject {
    
}
impl SQLReplaceable {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLReplaceable {
        for (tmp in SQLObject(db)) {
            for (x in SQLDeclareItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLLimit(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLOrderBy(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLOver(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLZOrderBy(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAggregateExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLArrayExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBetweenExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBinaryOpExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBinaryOpExprGroup(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCaseExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCastExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLContainsExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCurrentOfCursorExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDateExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDateTimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDbLinkExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLExtractExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLFlashbackExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLGroupingSetExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLInListExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLInSubQueryExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLIntervalExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLListExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLMatchAgainstExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLMethodInvokeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNotExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPropertyExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSequenceExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLUnaryExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLValuesExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAssignItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnDefinition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnUniqueKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDefault(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDeleteStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDescribeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropCatalogStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropDatabaseStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropFunctionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropRoleStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropSequenceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropServerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropSynonymStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTableGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTableSpaceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTriggerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropTypeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropUserStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLExprStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLExprTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLFetchStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLIfStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLInsertInto(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLJoinTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLReturnStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSelectGroupByClause(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSelectItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSelectOrderByItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowACLStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCatalogsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowColumnsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCreateViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowDatabasesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowFunctionsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowQueryTaskStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowSessionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowTableGroupsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowTablesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowViewsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTableSampling(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLUpdateSetItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLUseStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLValuesTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLWhileStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlOrderingExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleReturningClause(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SampleClause(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAnalytic(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleArgumentExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIntervalExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIsOfTypeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIsSetExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleOuterExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGBoxExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGCidrExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGCircleExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGExtractExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGInetExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGLineSegmentsExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGMacAddrExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGPointExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGPolygonExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLReplaceable {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLName extends SQLObject {
    
}
impl SQLName {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLName {
        for (tmp in SQLObject(db)) {
            for (x in SQLDbLinkExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLName {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLIdentifierExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLName {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPropertyExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLName {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlUserName(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLName {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerObjectReferenceExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLName {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLExpr extends SQLObject {
    
}
impl SQLExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLExpr {
        for (tmp in SQLObject(db)) {
            for (x in SQLExprImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBooleanExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDbLinkExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlExprImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlOutFileExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleArgumentExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleDatetimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleRangeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSysdateExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleTreatExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLLockTableStatement extends SQLObject {
    
}
impl SQLLockTableStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLLockTableStatement {
        for (tmp in SQLObject(db)) {
            for (x in MySqlLockTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLockTableStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleLockTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLockTableStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlShowStatement extends SQLObject {
    
}
impl MySqlShowStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlShowStatement {
        for (tmp in SQLObject(db)) {
            for (x in MySqlClearPlanCacheStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlDisabledPlanCacheStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlExplainPlanCacheStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowAuthorsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowBinLogEventsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowBinaryLogsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowBroadcastsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCharacterSetStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowClusterNameStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCollationStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowConfigStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowContributorsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCreateDatabaseStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCreateEventStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCreateFunctionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCreateProcedureStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowCreateTriggerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowDatabaseStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowDatasourcesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowDdlStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowDsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowEngineStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowEnginesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowErrorsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowEventsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowFunctionCodeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowFunctionStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowGrantsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowHMSMetaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowHelpStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowJobStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowMasterLogsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowMasterStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowMigrateTaskStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowNodeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowOpenTablesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowPartitionsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowPhysicalProcesslistStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowPlanCacheStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowPlanCacheStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowPluginsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowPrivilegesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowProcedureCodeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowProcedureStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowProcessListStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowProfileStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowProfilesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowRelayLogEventsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowRuleStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowRuleStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowSequencesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowSlaveHostsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowSlaveStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowSlowStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowTableStatusStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowTopologyStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowTraceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowTriggersStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlShowWarningsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlUpdatePlanCacheStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlCreateFullTextDictionaryStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlShowCreateFullTextStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlShowDbLockStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlShowFullTextStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlShowHtcStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlShowStcStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLAlterTableItem extends SQLObject {
    
}
impl SQLAlterTableItem {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLAlterTableItem {
        for (tmp in SQLObject(db)) {
            for (x in SQLAlterCharacter(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddClusteringKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddConstraint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddExtPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddSupplemental(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAlterColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAlterIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAnalyzePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableArchivePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableBlockSize(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableChangeOwner(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableCheckPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableCoalescePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableCompression(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableConvertCharSet(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDeleteByCondition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDisableConstraint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDisableKeys(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDisableLifecycle(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDiscardPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropClusteringKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropColumnItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropConstraint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropExtPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropForeignKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropPrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropSubpartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableEnableConstraint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableEnableKeys(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableEnableLifecycle(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableExchangePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableImportPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableMergePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableModifyClusteredBy(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableOptimizePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTablePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTablePartitionCount(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTablePartitionLifecycle(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTablePartitionSetProperties(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableReOrganizePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRebuildPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRecoverPartitions(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRename(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRenameColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRenameIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRenamePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableRepairPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableReplaceColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableSetComment(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableSetLifecycle(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableSetLocation(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableSetOption(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableSubpartitionAvailablePartitionNum(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableSubpartitionLifecycle(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableTouch(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableTruncatePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableUnarchivePartition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableAlterColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableAlterFullTextIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableChangeColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableDiscardTablespace(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableForce(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableImportTablespace(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableLock(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableModifyColumn(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableOption(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableOrderBy(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableValidation(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlAlterTableAlterCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsAlterTableSetChangeLogs(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsAlterTableSetFileFormat(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAlterTableItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterTableItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLServerExpr extends SQLObject {
    
}
impl SQLServerExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLServerExpr {
        for (tmp in SQLObject(db)) {
            for (x in SQLServerObjectReferenceExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLIndex extends SQLObject {
    
}
impl SQLIndex {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLIndex {
        for (tmp in SQLObject(db)) {
            for (x in SQLIndexDefinition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLIndex {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAddIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLIndex {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableAlterIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLIndex {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLIndex {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLIndex {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlTableIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLIndex {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLPrimaryKey extends SQLObject {
    
}
impl SQLPrimaryKey {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLPrimaryKey {
        for (tmp in SQLObject(db)) {
            for (x in SQLPrimaryKeyImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLPrimaryKey {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlPrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLPrimaryKey {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OraclePrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLPrimaryKey {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLTableConstraint extends SQLObject {
    
}
impl SQLTableConstraint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLTableConstraint {
        for (tmp in SQLObject(db)) {
            for (x in SQLCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDefault(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLPrimaryKeyImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OraclePrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlObject extends SQLObject {
    
}
impl MySqlObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlObject {
        for (tmp in SQLObject(db)) {
            for (x in SQLAlterTableAddExtPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableDropExtPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlObjectImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableDiscardTablespace(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTableImportTablespace(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlPartitionByKey(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlSelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlSubPartitionByKey(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlSubPartitionByList(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlSubPartitionByValue(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlTableIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLLiteralExpr extends SQLObject {
    
}
impl SQLLiteralExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLLiteralExpr {
        for (tmp in SQLObject(db)) {
            for (x in SQLBinaryExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBooleanExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDateExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDateTimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDefaultExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLHexExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNullExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNumericLiteralExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTextLiteralExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTimestampExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIntervalExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLLiteralExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLValuableExpr extends SQLObject {
    
}
impl SQLValuableExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLValuableExpr {
        for (tmp in SQLObject(db)) {
            for (x in SQLBigIntExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBinaryExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBooleanExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCharExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDateExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDateTimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDecimalExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDoubleExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLFloatExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLHexExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLIntegerExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLJSONExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNullExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLNumberExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLRealExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSmallIntExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTimeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTimestampExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTinyIntExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLValuableExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLStatement extends SQLObject {
    
}
impl SQLStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLStatementImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLInsertStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in HiveInsertStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsBaselineStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsCancelDDLJob(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsChangeDDLJob(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsClearDDLJobCache(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsInspectDDLJobCache(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsRecoverDDLJob(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsRemoveDDLJob(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsRollbackDDLJob(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OscarStatement extends SQLObject {
    
}
impl OscarStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OscarStatement {
        for (tmp in SQLObject(db)) {
            for (x in OscarAlterSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarConnectToStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarCreateSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarDeleteStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarDropSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarInsertStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarSelectStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarShowStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarStartTransactionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlStatement extends SQLObject {
    
}
impl MySqlStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlStatement {
        for (tmp in SQLObject(db)) {
            for (x in MySqlAnalyzeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlExplainStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlStatementImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PGExpr extends SQLObject {
    
}
impl PGExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PGExpr {
        for (tmp in SQLObject(db)) {
            for (x in PGExprImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield PGExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGTypeCastExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield PGExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLShowStatement extends SQLObject {
    
}
impl SQLShowStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLShowStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLShowACLStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCatalogsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowColumnsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCreateMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowCreateViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowDatabasesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowErrorsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowFunctionsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowGrantsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowHistoryStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowIndexesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowOutlinesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowPackagesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowPartitionsStmt(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowProcessListStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowQueryTaskStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowRecylebinStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowRoleStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowRolesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowSessionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowStatisticListStmt(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowStatisticStmt(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowTableGroupsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowTablesStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowUsersStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowVariantsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLShowViewsStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsShowDDLJobs(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsShowGlobalIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DrdsShowMetadataLock(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarShowStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGShowStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLShowStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleAlterStatement extends SQLObject {
    
}
impl OracleAlterStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleAlterStatement {
        for (tmp in SQLObject(db)) {
            for (x in OracleAlterSessionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAlterSynonymStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAlterTablespaceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAlterTriggerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAlterViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema DB2Object extends SQLObject {
    
}
impl DB2Object {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *DB2Object {
        for (tmp in SQLObject(db)) {
            for (x in DB2StatementImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield DB2Object {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in DB2SelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield DB2Object {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLAlterDatabaseItem extends SQLObject {
    
}
impl SQLAlterDatabaseItem {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLAlterDatabaseItem {
        for (tmp in SQLObject(db)) {
            for (x in MySqlAlterDatabaseKillJob(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterDatabaseItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterDatabaseSetOption(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterDatabaseItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLObjectWithDataType extends SQLObject {
    
}
impl SQLObjectWithDataType {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLObjectWithDataType {
        for (tmp in SQLObject(db)) {
            for (x in SQLDeclareItem(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLObjectWithDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLParameter(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLObjectWithDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCastExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLObjectWithDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnDefinition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLObjectWithDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateFunctionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLObjectWithDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PGSQLObject extends SQLObject {
    
}
impl PGSQLObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PGSQLObject {
        for (tmp in SQLObject(db)) {
            for (x in PGSQLObjectImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGFunctionTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGSelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLDbTypedObject extends SQLObject {
    
}
impl SQLDbTypedObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLDbTypedObject {
        for (tmp in SQLObject(db)) {
            for (x in SQLDataTypeImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLBinaryOpExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnDefinition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLConstraintImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSelect(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLSelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLUnionQuery(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDbTypedObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLDataType extends SQLObject {
    
}
impl SQLDataType {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLDataType {
        for (tmp in SQLObject(db)) {
            for (x in SQLArrayDataType(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDataTypeImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLMapDataType(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLRecordDataType(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLRowDataType(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLStructDataType(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTableDataType(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDataType {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLTableElement extends SQLObject {
    
}
impl SQLTableElement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLTableElement {
        for (tmp in SQLObject(db)) {
            for (x in SQLCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLColumnDefinition(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDefault(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLTableLike(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLUnique(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlTableIndex(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OraclePrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSupplementalIdKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSupplementalLogGrp(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableElement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleStatement extends SQLObject {
    
}
impl OracleStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleStatement {
        for (tmp in SQLObject(db)) {
            for (x in OracleExceptionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleExplainStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleForStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleInsertStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleRunStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSetTransactionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleStatementImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLAlterStatement extends SQLObject {
    
}
impl SQLAlterStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLAlterStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLAlterDatabaseStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterOutlineStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterProcedureStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterSequenceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterSystemGetConfigStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterSystemSetConfigStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterViewRenameStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in HiveMsckRepairStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterEventStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterLogFileGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterServerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterTablespaceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlAlterUserStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateAddLogFileGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateEventStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateExternalCatalogStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlRenameSequenceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlRenameTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MysqlAlterFullTextStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsAddFileStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsAddStatisticStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsAddTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsCountStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsRestoreStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsUndoTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarAlterSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGAlterSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLAlterStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleExpr extends SQLObject {
    
}
impl OracleExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleExpr {
        for (tmp in SQLObject(db)) {
            for (x in OracleAnalytic(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleAnalyticWindowing(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleBinaryDoubleExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleBinaryFloatExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCursorExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIntervalExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIsOfTypeExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleIsSetExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleOuterExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLCreateStatement extends SQLObject {
    
}
impl SQLCreateStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLCreateStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLAlterViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateDatabaseStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateFunctionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateProcedureStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateRoleStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateSequenceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateTableGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateTriggerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLDropRoleStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in HiveCreateFunctionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateServerStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateTableSpaceStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlCreateUserStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLAlterResourceGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateResourceGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLListResourceGroupStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateDatabaseDbLinkStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreatePackageStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateSynonymStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateTypeStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarCreateSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGCreateSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLCreateStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OscarObject extends SQLObject {
    
}
impl OscarObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OscarObject {
        for (tmp in SQLObject(db)) {
            for (x in OscarObjectImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarFunctionTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OscarSelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield OscarObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleSQLObject extends SQLObject {
    
}
impl OracleSQLObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSQLObject {
        for (tmp in SQLObject(db)) {
            for (x in OracleDataTypeIntervalDay(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleDataTypeIntervalYear(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSQLObjectImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleLobStorageClause(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleWithSubqueryEntry(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleForeignKey(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSelectQueryBlock(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleUnique(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleUsingIndexClause(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSQLObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlIndexHint extends SQLObject {
    
}
impl MySqlIndexHint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlIndexHint {
        for (tmp in SQLObject(db)) {
            for (x in MySqlIndexHintImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlIndexHint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PGSQLStatement extends SQLObject {
    
}
impl PGSQLStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PGSQLStatement {
        for (tmp in SQLObject(db)) {
            for (x in PGAlterSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGConnectToStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGCreateSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGDeleteStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGDropSchemaStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGInsertStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGSelectStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGShowStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGStartTransactionStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in PGUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield PGSQLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLServerStatement extends SQLObject {
    
}
impl SQLServerStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLServerStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLServerStatementImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerExecStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerRollbackStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerSetTransactionIsolationLevelStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerUpdateStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerWaitForStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLForeignKeyConstraint extends SQLObject {
    
}
impl SQLForeignKeyConstraint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLForeignKeyConstraint {
        for (tmp in SQLObject(db)) {
            for (x in SQLForeignKeyImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLForeignKeyConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLDDLStatement extends SQLObject {
    
}
impl SQLDDLStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLDDLStatement {
        for (tmp in SQLObject(db)) {
            for (x in SQLAlterTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDDLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLDDLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleSegmentAttributes extends SQLObject {
    
}
impl OracleSegmentAttributes {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSegmentAttributes {
        for (tmp in SQLObject(db)) {
            for (x in SQLPartition(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSegmentAttributes {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLCreateMaterializedViewStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSegmentAttributes {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSegmentAttributesImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSegmentAttributes {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSegmentAttributes {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSegmentAttributes {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLConstraint extends SQLObject {
    
}
impl SQLConstraint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLConstraint {
        for (tmp in SQLObject(db)) {
            for (x in SQLConstraintImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleConstraint extends SQLObject {
    
}
impl OracleConstraint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleConstraint {
        for (tmp in SQLObject(db)) {
            for (x in OracleCheck(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleForeignKey(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OraclePrimaryKey(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleUnique(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OdpsObject extends SQLObject {
    
}
impl OdpsObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OdpsObject {
        for (tmp in SQLObject(db)) {
            for (x in OdpsNewExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsObjectImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsTransformExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OdpsUDTFSQLSelectItem(db)) {
                if (tmp.key_eq(x)) {
                    yield OdpsObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleDDLStatement extends SQLObject {
    
}
impl OracleDDLStatement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleDDLStatement {
        for (tmp in SQLObject(db)) {
            for (x in OracleCreateIndexStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleDDLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleCreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleDDLStatement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleSelectTableSource extends SQLObject {
    
}
impl OracleSelectTableSource {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleSelectTableSource {
        for (tmp in SQLObject(db)) {
            for (x in OracleSelectJoin(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSelectTableSource {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSelectSubqueryTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSelectTableSource {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in OracleSelectTableReference(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleSelectTableSource {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLSelectQuery extends SQLObject {
    
}
impl SQLSelectQuery {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLSelectQuery {
        for (tmp in SQLObject(db)) {
            for (x in SQLSelectQueryBase(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLSelectQuery {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLValuesTableSource(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLSelectQuery {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema PhoenixObject extends SQLObject {
    
}
impl PhoenixObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *PhoenixObject {
        for (tmp in SQLObject(db)) {
            for (x in PhoenixStatementImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield PhoenixObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema OracleAlterTablespaceItem extends SQLObject {
    
}
impl OracleAlterTablespaceItem {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *OracleAlterTablespaceItem {
        for (tmp in SQLObject(db)) {
            for (x in OracleAlterTablespaceAddDataFile(db)) {
                if (tmp.key_eq(x)) {
                    yield OracleAlterTablespaceItem {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema MySqlExpr extends SQLObject {
    
}
impl MySqlExpr {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *MySqlExpr {
        for (tmp in SQLObject(db)) {
            for (x in MySqlCharExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlOrderingExpr(db)) {
                if (tmp.key_eq(x)) {
                    yield MySqlExpr {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLServerObject extends SQLObject {
    
}
impl SQLServerObject {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLServerObject {
        for (tmp in SQLObject(db)) {
            for (x in SQLServerObjectImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLServerInsertStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLServerObject {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLHint extends SQLObject {
    
}
impl SQLHint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLHint {
        for (tmp in SQLObject(db)) {
            for (x in SQLCommentHint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLHint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in SQLExprHint(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLHint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLUniqueConstraint extends SQLObject {
    
}
impl SQLUniqueConstraint {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLUniqueConstraint {
        for (tmp in SQLObject(db)) {
            for (x in SQLUnique(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLUniqueConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
            for (x in MySqlKey(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLUniqueConstraint {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema DB2Statement extends SQLObject {
    
}
impl DB2Statement {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *DB2Statement {
        for (tmp in SQLObject(db)) {
            for (x in DB2CreateTableStatement(db)) {
                if (tmp.key_eq(x)) {
                    yield DB2Statement {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
schema SQLTableSource extends SQLObject {
    
}
impl SQLTableSource {
    @data_constraint
    @inline
    pub fn __all__(db: SqlDB) -> *SQLTableSource {
        for (tmp in SQLObject(db)) {
            for (x in SQLTableSourceImpl(db)) {
                if (tmp.key_eq(x)) {
                    yield SQLTableSource {
                        oid_ : tmp.oid_,
                        parent_oid_ : tmp.parent_oid_,
                        location_oid_ : tmp.location_oid_,
                        node_type_ : tmp.node_type_,
                        index_in_parent_ : tmp.index_in_parent_,
                        after_comments_direct_ : tmp.after_comments_direct_,
                        before_comments_direct_ : tmp.before_comments_direct_,
                        db_type_ : tmp.db_type_,
                        printable_text : tmp.printable_text
                    }
                }
            }
        }
    }
}
